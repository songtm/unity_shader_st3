{
    "scope": "source.shader",
    "completions":
    [
        { "trigger": "abs(x)\tcg-function", "contents":"abs(${1:x})"},
        { "trigger": "acos(x)\tcg-function", "contents":"acos(${1:x})"},
        { "trigger": "all(x)\tcg-function", "contents":"all(${1:x})"},
        { "trigger": "any(x)\tcg-function", "contents":"any(${1:x})"},
        { "trigger": "asin(x)\tcg-function", "contents":"asin(${1:x})"},
        { "trigger": "atan(x)\tcg-function", "contents":"atan(${1:x})"},
        { "trigger": "atan2(y, x)\tcg-function", "contents":"atan2(${1:y}, ${2:x})"},
        { "trigger": "ceil(x)\tcg-function", "contents":"ceil(${1:x})"},
        { "trigger": "clamp(x, a, b)\tcg-function", "contents":"clamp(${1:x}, ${2:a}, ${3:b})"},
        { "trigger": "cos(x)\tcg-function", "contents":"cos(${1:x})"},
        { "trigger": "cosh(x)\tcg-function", "contents":"cosh(${1:x})"},
        { "trigger": "cross(A, B)\tcg-function", "contents":"cross(${1:A}, ${2:B})"},
        { "trigger": "degrees(x)\tcg-function", "contents":"degrees(${1:x})"},
        { "trigger": "determinant(M)\tcg-function", "contents":"determinant(${1:M})"},
        { "trigger": "dot(A, B)\tcg-function", "contents":"dot(${1:A}, ${2:B})"},
        { "trigger": "exp(x)\tcg-function", "contents":"exp(${1:x})"},
        { "trigger": "exp2(x)\tcg-function", "contents":"exp2(${1:x})"},
        { "trigger": "floor(x)\tcg-function", "contents":"floor(${1:x})"},
        { "trigger": "fmod(x, y)\tcg-function", "contents":"fmod(${1:x}, ${2:y})"},
        { "trigger": "frac(x)\tcg-function", "contents":"frac(${1:x})"},
        { "trigger": "frexp(x, out exp)\tcg-function", "contents":"frexp(${1:x}, ${2:exp})"},
        { "trigger": "isfinite(x)\tcg-function", "contents":"isfinite(${1:x})"},
        { "trigger": "isinf(x)\tcg-function", "contents":"isinf(${1:x})"},
        { "trigger": "isnan(x)\tcg-function", "contents":"isnan(${1:x})"},
        { "trigger": "ldexp(x, n)\tcg-function", "contents":"ldexp(${1:x}, ${2:n})"},
        { "trigger": "lerp(a, b, f)\tcg-function", "contents":"lerp(${1:a}, ${2:b}, ${3:f})"},
        { "trigger": "lit(NdotL, NdotH, m)\tcg-function", "contents":"lit(${1:NdotL}, ${2:NdotH}, ${3:m})"},
        { "trigger": "log(x)\tcg-function", "contents":"log(${1:x})"},
        { "trigger": "log2(x)\tcg-function", "contents":"log2(${1:x})"},
        { "trigger": "log10(x)\tcg-function", "contents":"log10(${1:x})"},
        { "trigger": "max(a, b)\tcg-function", "contents":"max(${1:a}, ${2:b})"},
        { "trigger": "min(a, b)\tcg-function", "contents":"min(${1:a}, ${2:b})"},
        { "trigger": "modf(x, out ip)\tcg-function", "contents":"modf(${1:x}, ${2:ip})"},
        { "trigger": "mul(M, N)\tcg-function", "contents":"mul(${1:M}, ${2:N})"},
        { "trigger": "mul(M, v)\tcg-function", "contents":"mul(${1:M}, ${2:v})"},
        { "trigger": "mul(v, M)\tcg-function", "contents":"mul(${1:v}, ${2:M})"},
        { "trigger": "noise(x)\tcg-function", "contents":"noise(${1:x})"},
        { "trigger": "pow(x, y)\tcg-function", "contents":"pow(${1:x}, ${2:y})"},
        { "trigger": "radians(x)\tcg-function", "contents":"radians(${1:x})"},
        { "trigger": "round(x)\tcg-function", "contents":"round(${1:x})"},
        { "trigger": "rsqrt(x)\tcg-function", "contents":"rsqrt(${1:x})"},
        { "trigger": "saturate(x)\tcg-function", "contents":"saturate(${1:x})"},
        { "trigger": "sign(x)\tcg-function", "contents":"sign(${1:x})"},
        { "trigger": "sin(x)\tcg-function", "contents":"sin(${1:x})"},
        { "trigger": "sincos(x, s, c)\tcg-function", "contents":"sincos(${1:x}, ${2:s}, ${3:c})"},
        { "trigger": "sinh(x)\tcg-function", "contents":"sinh(${1:x})"},
        { "trigger": "smoothstep(min, max, x)\tcg-function", "contents":"smoothstep(${1:min}, ${2:max}, ${3:x})"},
        { "trigger": "step(a, x)\tcg-function", "contents":"step(${1:a}, ${2:x})"},
        { "trigger": "sqrt(x)\tcg-function", "contents":"sqrt(${1:x})"},
        { "trigger": "tan(x)\tcg-function", "contents":"tan(${1:x})"},
        { "trigger": "tanh(x)\tcg-function", "contents":"tanh(${1:x})"},
        { "trigger": "transpose(M)\tcg-function", "contents":"transpose(${1:M})"},
        { "trigger": "distance(pt1, pt2)\tcg-function", "contents":"distance(${1:pt1}, ${2:pt2})"},
        { "trigger": "faceforward(N, I, Ng)\tcg-function", "contents":"faceforward(${1:N}, ${2:I}, ${3:Ng})"},
        { "trigger": "length(v)\tcg-function", "contents":"length(${1:v})"},
        { "trigger": "normalize(v)\tcg-function", "contents":"normalize(${1:v})"},
        { "trigger": "reflect(I, N)\tcg-function", "contents":"reflect(${1:I}, ${2:N})"},
        { "trigger": "refract(I, N, eta)\tcg-function", "contents":"refract(${1:I}, ${2:N}, ${3:eta})"},
    ]
}
