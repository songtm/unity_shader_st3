{
    "scope": "source.shader",
    "completions":
    [
        ["LazarovFresnelTerm(F0,roughness,cosA)\tf", "LazarovFresnelTerm(${1:F0},${2:roughness},${3:cosA})"],
        ["SebLagardeFresnelTerm(F0,roughness,cosA)\tf", "SebLagardeFresnelTerm(${1:F0},${2:roughness},${3:cosA})"],
        ["CookTorranceVisibilityTerm(NdotL,NdotV,NdotH,VdotH)\tf", "CookTorranceVisibilityTerm(${1:NdotL},${2:NdotV},${3:NdotH},${4:VdotH})"],
        ["KelemenVisibilityTerm(LdotH)\tf", "KelemenVisibilityTerm(${1:LdotH})"],
        ["ModifiedKelemenVisibilityTerm(LdotH,perceptualRoughness)\tf", "ModifiedKelemenVisibilityTerm(${1:LdotH},${2:perceptualRoughness})"],
        ["SmithGGXVisibilityTerm(NdotL,NdotV,perceptualRoughness)\tf", "SmithGGXVisibilityTerm(${1:NdotL},${2:NdotV},${3:perceptualRoughness})"],
        ["ImplicitVisibilityTerm()\tf", "ImplicitVisibilityTerm()"],
        ["RDFBlinnPhongNormalizedTerm(NdotH,n)\tf", "RDFBlinnPhongNormalizedTerm(${1:NdotH},${2:n})"],
        ["DecodeHDR_NoLinearSupportInSM2(data,decodeInstructions)\tf", "DecodeHDR_NoLinearSupportInSM2(${1:data},${2:decodeInstructions})"],
        ["DotClamped(a,b)\tf", "DotClamped(${1:a},${2:b})"],
        ["LambertTerm(normal,lightDir)\tf", "LambertTerm(${1:normal},${2:lightDir})"],
        ["BlinnTerm(normal,halfDir)\tf", "BlinnTerm(${1:normal},${2:halfDir})"],
        ["RoughnessToSpecPower(roughness)\tf", "RoughnessToSpecPower(${1:roughness})"],
        ["Unity_GlossyEnvironment()\tf", "Unity_GlossyEnvironment()"],
        ["TexCoords(v)\tf", "TexCoords(${1:v})"],
        ["DetailMask(uv)\tf", "DetailMask(${1:uv})"],
        ["Albedo(texcoords)\tf", "Albedo(${1:texcoords})"],
        ["Alpha(uv)\tf", "Alpha(${1:uv})"],
        ["Occlusion(uv)\tf", "Occlusion(${1:uv})"],
        ["SpecularGloss(uv)\tf", "SpecularGloss(${1:uv})"],
        ["MetallicGloss(uv)\tf", "MetallicGloss(${1:uv})"],
        ["Emission(uv)\tf", "Emission(${1:uv})"],
        ["NormalInTangentSpace(texcoords)\tf", "NormalInTangentSpace(${1:texcoords})"],
        ["Parallax(texcoords,viewDir)\tf", "Parallax(${1:texcoords},${2:viewDir})"],
        ["MetallicSetup_Reflectivity()\tf", "MetallicSetup_Reflectivity()"],
        ["SpecularSetup_Reflectivity()\tf", "SpecularSetup_Reflectivity()"],
        ["TransformToTangentSpace(tangent,binormal,normal,v)\tf", "TransformToTangentSpace(${1:tangent},${2:binormal},${3:normal},${4:v})"],
        ["TangentSpaceLightingInput(normalWorld,vTangent,lightDirWorld,eyeVecWorld,tangentSpaceLightDir,tangentSpaceEyeVec)\tf", "TangentSpaceLightingInput(${1:normalWorld},${2:vTangent},${3:lightDirWorld},${4:eyeVecWorld},${5:tangentSpaceLightDir},${6:tangentSpaceEyeVec})"],
        ["vertForwardBaseSimple(v)\tf", "vertForwardBaseSimple(${1:v})"],
        ["FragmentSetupSimple(i)\tf", "FragmentSetupSimple(${1:i})"],
        ["MainLightSimple(i,s)\tf", "MainLightSimple(${1:i},${2:s})"],
        ["PerVertexGrazingTerm(i,s)\tf", "PerVertexGrazingTerm(${1:i},${2:s})"],
        ["PerVertexFresnelTerm(i)\tf", "PerVertexFresnelTerm(${1:i})"],
        ["LightDirForSpecular(i,mainLight)\tf", "LightDirForSpecular(${1:i},${2:mainLight})"],
        ["BRDF3DirectSimple(diffColor,specColor,smoothness,rl)\tf", "BRDF3DirectSimple(${1:diffColor},${2:specColor},${3:smoothness},${4:rl})"],
        ["fragForwardBaseSimpleInternal(i)\tf", "fragForwardBaseSimpleInternal(${1:i})"],
        ["fragForwardBaseSimple(i)\tf", "fragForwardBaseSimple(${1:i})"],
        ["vertForwardAddSimple(v)\tf", "vertForwardAddSimple(${1:v})"],
        ["FragmentSetupSimpleAdd(i)\tf", "FragmentSetupSimpleAdd(${1:i})"],
        ["LightSpaceNormal(i,s)\tf", "LightSpaceNormal(${1:i},${2:s})"],
        ["fragForwardAddSimpleInternal(i)\tf", "fragForwardAddSimpleInternal(${1:i})"],
        ["fragForwardAddSimple(i)\tf", "fragForwardAddSimple(${1:i})"],
        ["SpeedTreeVert(IN,OUT)\tf", "SpeedTreeVert(${1:IN},${2:OUT})"],
        ["SpeedTreeFrag(IN,OUT)\tf", "SpeedTreeFrag(${1:IN},${2:OUT})"],
        ["leaves(v)\tf", "leaves(${1:v})"],
        ["bark(v)\tf", "bark(${1:v})"],
        ["UnityGet2DClipping(position,clipRect)\tf", "UnityGet2DClipping(${1:position},${2:clipRect})"],
        ["UnityGetUIDiffuseColor(position,mainTexture,alphaTexture,textureSampleAdd)\tf", "UnityGetUIDiffuseColor(${1:position},${2:mainTexture},${3:alphaTexture},${4:textureSampleAdd})"],
        ["unitySampleShadow(shadowCoord)\tf", "unitySampleShadow(${1:shadowCoord})"],
        ["UnitySpotCookie(LightCoord)\tf", "UnitySpotCookie(${1:LightCoord})"],
        ["UnitySpotAttenuate(LightCoord)\tf", "UnitySpotAttenuate(${1:LightCoord})"],
        ["PerceptualRoughnessToRoughness(perceptualRoughness)\tf", "PerceptualRoughnessToRoughness(${1:perceptualRoughness})"],
        ["RoughnessToPerceptualRoughness(roughness)\tf", "RoughnessToPerceptualRoughness(${1:roughness})"],
        ["SmoothnessToRoughness(smoothness)\tf", "SmoothnessToRoughness(${1:smoothness})"],
        ["SmoothnessToPerceptualRoughness(smoothness)\tf", "SmoothnessToPerceptualRoughness(${1:smoothness})"],
        ["Pow4(x)\tf", "Pow4(${1:x})"],
        ["Pow5(x)\tf", "Pow5(${1:x})"],
        ["FresnelTerm(F0,cosA)\tf", "FresnelTerm(${1:F0},${2:cosA})"],
        ["FresnelLerp(F0,F90,cosA)\tf", "FresnelLerp(${1:F0},${2:F90},${3:cosA})"],
        ["FresnelLerpFast(F0,F90,cosA)\tf", "FresnelLerpFast(${1:F0},${2:F90},${3:cosA})"],
        ["DisneyDiffuse(NdotV,NdotL,LdotH,perceptualRoughness)\tf", "DisneyDiffuse(${1:NdotV},${2:NdotL},${3:LdotH},${4:perceptualRoughness})"],
        ["SmithVisibilityTerm(NdotL,NdotV,k)\tf", "SmithVisibilityTerm(${1:NdotL},${2:NdotV},${3:k})"],
        ["SmithBeckmannVisibilityTerm(NdotL,NdotV,roughness)\tf", "SmithBeckmannVisibilityTerm(${1:NdotL},${2:NdotV},${3:roughness})"],
        ["SmithJointGGXVisibilityTerm(NdotL,NdotV,roughness)\tf", "SmithJointGGXVisibilityTerm(${1:NdotL},${2:NdotV},${3:roughness})"],
        ["GGXTerm(NdotH,roughness)\tf", "GGXTerm(${1:NdotH},${2:roughness})"],
        ["PerceptualRoughnessToSpecPower(perceptualRoughness)\tf", "PerceptualRoughnessToSpecPower(${1:perceptualRoughness})"],
        ["NDFBlinnPhongNormalizedTerm(NdotH,n)\tf", "NDFBlinnPhongNormalizedTerm(${1:NdotH},${2:n})"],
        ["GetSpecPowToMip(fSpecPow,nMips)\tf", "GetSpecPowToMip(${1:fSpecPow},${2:nMips})"],
        ["Unity_SafeNormalize(inVec)\tf", "Unity_SafeNormalize(${1:inVec})"],
        ["BRDF1_Unity_PBS(diffColor,specColor,oneMinusReflectivity,smoothness,normal,viewDir,light,gi)\tf", "BRDF1_Unity_PBS(${1:diffColor},${2:specColor},${3:oneMinusReflectivity},${4:smoothness},${5:normal},${6:viewDir},${7:light},${8:gi})"],
        ["BRDF2_Unity_PBS(diffColor,specColor,oneMinusReflectivity,smoothness,normal,viewDir,light,gi)\tf", "BRDF2_Unity_PBS(${1:diffColor},${2:specColor},${3:oneMinusReflectivity},${4:smoothness},${5:normal},${6:viewDir},${7:light},${8:gi})"],
        ["BRDF3_Direct(diffColor,specColor,rlPow4,smoothness)\tf", "BRDF3_Direct(${1:diffColor},${2:specColor},${3:rlPow4},${4:smoothness})"],
        ["BRDF3_Indirect(diffColor,specColor,indirect,grazingTerm,fresnelTerm)\tf", "BRDF3_Indirect(${1:diffColor},${2:specColor},${3:indirect},${4:grazingTerm},${5:fresnelTerm})"],
        ["BRDF3_Unity_PBS(diffColor,specColor,oneMinusReflectivity,smoothness,normal,viewDir,light,gi)\tf", "BRDF3_Unity_PBS(${1:diffColor},${2:specColor},${3:oneMinusReflectivity},${4:smoothness},${5:normal},${6:viewDir},${7:light},${8:gi})"],
        ["LightingTreeLeaf(s,lightDir,viewDir,atten)\tf", "LightingTreeLeaf(${1:s},${2:lightDir},${3:viewDir},${4:atten})"],
        ["ShadeTranslucentMainLight(vertex,normal)\tf", "ShadeTranslucentMainLight(${1:vertex},${2:normal})"],
        ["ShadeTranslucentLights(vertex,normal)\tf", "ShadeTranslucentLights(${1:vertex},${2:normal})"],
        ["TreeVertBark(v)\tf", "TreeVertBark(${1:v})"],
        ["TreeVertLeaf(v)\tf", "TreeVertLeaf(${1:v})"],
        ["UnitySampleShadowmap(shadowCoord)\tf", "UnitySampleShadowmap(${1:shadowCoord})"],
        ["SampleCubeDistance(vec)\tf", "SampleCubeDistance(${1:vec})"],
        ["MetallicSetup_ShadowGetOneMinusReflectivity(uv)\tf", "MetallicSetup_ShadowGetOneMinusReflectivity(${1:uv})"],
        ["SpecularSetup_ShadowGetOneMinusReflectivity(uv)\tf", "SpecularSetup_ShadowGetOneMinusReflectivity(${1:uv})"],
        ["vertShadowCaster(v,UNITY_STANDARD_USE_SHADOW_OUTPUT_STRUCT,o,float4)\tf", "vertShadowCaster(${1:v},${2:UNITY_STANDARD_USE_SHADOW_OUTPUT_STRUCT},${3:o},${4:float4})"],
        ["fragShadowCaster(UNITY_STANDARD_USE_SHADOW_OUTPUT_STRUCT,i,UNITY_STANDARD_USE_DITHER_MASK,vpos)\tf", "fragShadowCaster(${1:UNITY_STANDARD_USE_SHADOW_OUTPUT_STRUCT},${2:i},${3:UNITY_STANDARD_USE_DITHER_MASK},${4:vpos})"],
        ["ReverseBits32(bits)\tf", "ReverseBits32(${1:bits})"],
        ["RadicalInverse_VdC(bits)\tf", "RadicalInverse_VdC(${1:bits})"],
        ["Hammersley2d(i,maxSampleCount)\tf", "Hammersley2d(${1:i},${2:maxSampleCount})"],
        ["Hash(s)\tf", "Hash(${1:s})"],
        ["InitRandom(input)\tf", "InitRandom(${1:input})"],
        ["GetLocalFrame(N,tangentX,tangentY)\tf", "GetLocalFrame(${1:N},${2:tangentX},${3:tangentY})"],
        ["ImportanceSampleCosDir(u,N,tangentX,tangentY,L)\tf", "ImportanceSampleCosDir(${1:u},${2:N},${3:tangentX},${4:tangentY},${5:L})"],
        ["ImportanceSampleGGXDir(u,V,N,tangentX,tangentY,roughness,H,L)\tf", "ImportanceSampleGGXDir(${1:u},${2:V},${3:N},${4:tangentX},${5:tangentY},${6:roughness},${7:H},${8:L})"],
        ["ImportanceSampleLambert(u,N,tangentX,tangentY,L,NdotL,weightOverPdf)\tf", "ImportanceSampleLambert(${1:u},${2:N},${3:tangentX},${4:tangentY},${5:L},${6:NdotL},${7:weightOverPdf})"],
        ["ImportanceSampleGGX(u,V,N,tangentX,tangentY,roughness,NdotV,L,VdotH,NdotL,weightOverPdf)\tf", "ImportanceSampleGGX(${1:u},${2:V},${3:N},${4:tangentX},${5:tangentY},${6:roughness},${7:NdotV},${8:L},${9:VdotH},${10:NdotL},${11:weightOverPdf})"],
        ["IntegrateLambertDiffuseIBLRef(diffuseLighting)\tf", "IntegrateLambertDiffuseIBLRef(${1:diffuseLighting})"],
        ["IntegrateDisneyDiffuseIBLRef(diffuseLighting)\tf", "IntegrateDisneyDiffuseIBLRef(${1:diffuseLighting})"],
        ["IntegrateSpecularGGXIBLRef(specularLighting)\tf", "IntegrateSpecularGGXIBLRef(${1:specularLighting})"],
        ["IntegrateDFG(V,N,roughness,sampleCount)\tf", "IntegrateDFG(${1:V},${2:N},${3:roughness},${4:sampleCount})"],
        ["IntegrateLD()\tf", "IntegrateLD()"],
        ["UnityGlossyEnvironmentSetup(Smoothness,worldViewDir,Normal,fresnel0)\tf", "UnityGlossyEnvironmentSetup(${1:Smoothness},${2:worldViewDir},${3:Normal},${4:fresnel0})"],
        ["perceptualRoughnessToMipmapLevel(perceptualRoughness)\tf", "perceptualRoughnessToMipmapLevel(${1:perceptualRoughness})"],
        ["mipmapLevelToPerceptualRoughness(mipmapLevel)\tf", "mipmapLevelToPerceptualRoughness(${1:mipmapLevel})"],
        ["vert_deferred(vertex,normal)\tf", "vert_deferred(${1:vertex},${2:normal})"],
        ["UnityDeferredComputeFadeDistance(wpos,z)\tf", "UnityDeferredComputeFadeDistance(${1:wpos},${2:z})"],
        ["UnityDeferredComputeShadow(vec,fadeDist,uv)\tf", "UnityDeferredComputeShadow(${1:vec},${2:fadeDist},${3:uv})"],
        ["UnityDeferredCalculateLightParams(i,outWorldPos,outUV,outLightDir,outAtten,outFadeDist)\tf", "UnityDeferredCalculateLightParams(${1:i},${2:outWorldPos},${3:outUV},${4:outLightDir},${5:outAtten},${6:outFadeDist})"],
        ["SpecularStrength(specular)\tf", "SpecularStrength(${1:specular})"],
        ["EnergyConservationBetweenDiffuseAndSpecular(albedo,specColor,oneMinusReflectivity)\tf", "EnergyConservationBetweenDiffuseAndSpecular(${1:albedo},${2:specColor},${3:oneMinusReflectivity})"],
        ["OneMinusReflectivityFromMetallic(metallic)\tf", "OneMinusReflectivityFromMetallic(${1:metallic})"],
        ["DiffuseAndSpecularFromMetallic(albedo,metallic,specColor,oneMinusReflectivity)\tf", "DiffuseAndSpecularFromMetallic(${1:albedo},${2:metallic},${3:specColor},${4:oneMinusReflectivity})"],
        ["PreMultiplyAlpha(diffColor,alpha,oneMinusReflectivity,outModifiedAlpha)\tf", "PreMultiplyAlpha(${1:diffColor},${2:alpha},${3:oneMinusReflectivity},${4:outModifiedAlpha})"],
        ["ParallaxOffset1Step(h,height,viewDir)\tf", "ParallaxOffset1Step(${1:h},${2:height},${3:viewDir})"],
        ["LerpOneTo(b,t)\tf", "LerpOneTo(${1:b},${2:t})"],
        ["LerpWhiteTo(b,t)\tf", "LerpWhiteTo(${1:b},${2:t})"],
        ["UnpackScaleNormal(packednormal,bumpScale)\tf", "UnpackScaleNormal(${1:packednormal},${2:bumpScale})"],
        ["BlendNormals(n1,n2)\tf", "BlendNormals(${1:n1},${2:n2})"],
        ["CreateTangentToWorldPerVertex(normal,tangent,tangentSign)\tf", "CreateTangentToWorldPerVertex(${1:normal},${2:tangent},${3:tangentSign})"],
        ["ShadeSHPerVertex(normal,ambient)\tf", "ShadeSHPerVertex(${1:normal},${2:ambient})"],
        ["ShadeSHPerPixel(normal,ambient,worldPos)\tf", "ShadeSHPerPixel(${1:normal},${2:ambient},${3:worldPos})"],
        ["BoxProjectedCubemapDirection(worldRefl,worldPos,cubemapCenter,boxMin,boxMax)\tf", "BoxProjectedCubemapDirection(${1:worldRefl},${2:worldPos},${3:cubemapCenter},${4:boxMin},${5:boxMax})"],
        ["CalculateSurfaceGradient(n,dpdx,dpdy,dhdx,dhdy)\tf", "CalculateSurfaceGradient(${1:n},${2:dpdx},${3:dpdy},${4:dhdx},${5:dhdy})"],
        ["PerturbNormal(n,dpdx,dpdy,dhdx,dhdy)\tf", "PerturbNormal(${1:n},${2:dpdx},${3:dpdy},${4:dhdx},${5:dhdy})"],
        ["CalculateSurfaceNormal(position,normal,gradient,uv)\tf", "CalculateSurfaceNormal(${1:position},${2:normal},${3:gradient},${4:uv})"],
        ["UnpackNormalFromFloat(fValue)\tf", "UnpackNormalFromFloat(${1:fValue})"],
        ["CubicSmooth(vData)\tf", "CubicSmooth(${1:vData})"],
        ["TriangleWave(vData)\tf", "TriangleWave(${1:vData})"],
        ["TrigApproximate(vData)\tf", "TrigApproximate(${1:vData})"],
        ["RotationMatrix(vAxis,fAngle)\tf", "RotationMatrix(${1:vAxis},${2:fAngle})"],
        ["mul_float3x3_float3x3(mMatrixA,mMatrixB)\tf", "mul_float3x3_float3x3(${1:mMatrixA},${2:mMatrixB})"],
        ["mul_float3x3_float3(mMatrix,vVector)\tf", "mul_float3x3_float3(${1:mMatrix},${2:vVector})"],
        ["Roll(fCurrent,fMaxScale,fMinScale,fSpeed,fRipple,vPos,fTime,vRotatedWindVector)\tf", "Roll(${1:fCurrent},${2:fMaxScale},${3:fMinScale},${4:fSpeed},${5:fRipple},${6:vPos},${7:fTime},${8:vRotatedWindVector})"],
        ["Twitch(vPos,fAmount,fSharpness,fTime)\tf", "Twitch(${1:vPos},${2:fAmount},${3:fSharpness},${4:fTime})"],
        ["Oscillate(vPos,fTime,fOffset,fWeight,fWhip,bWhip,bRoll,bComplex,fTwitch,fTwitchFreqScale,vOscillations,vRotatedWindVector)\tf", "Oscillate(${1:vPos},${2:fTime},${3:fOffset},${4:fWeight},${5:fWhip},${6:bWhip},${7:bRoll},${8:bComplex},${9:fTwitch},${10:fTwitchFreqScale},${11:vOscillations},${12:vRotatedWindVector})"],
        ["Turbulence(fTime,fOffset,fGlobalTime,fTurbulence)\tf", "Turbulence(${1:fTime},${2:fOffset},${3:fGlobalTime},${4:fTurbulence})"],
        ["GlobalWind(vPos,vInstancePos,bPreserveShape,vRotatedWindVector,time)\tf", "GlobalWind(${1:vPos},${2:vInstancePos},${3:bPreserveShape},${4:vRotatedWindVector},${5:time})"],
        ["SimpleBranchWind(vPos,vInstancePos,fWeight,fOffset,fTime,fDistance,fTwitch,fTwitchScale,fWhip,bWhip,bRoll,bComplex,vRotatedWindVector)\tf", "SimpleBranchWind(${1:vPos},${2:vInstancePos},${3:fWeight},${4:fOffset},${5:fTime},${6:fDistance},${7:fTwitch},${8:fTwitchScale},${9:fWhip},${10:bWhip},${11:bRoll},${12:bComplex},${13:vRotatedWindVector})"],
        ["DirectionalBranchWind(vPos,vInstancePos,fWeight,fOffset,fTime,fDistance,fTurbulence,fAdherence,fTwitch,fTwitchScale,fWhip,bWhip,bRoll,bComplex,bTurbulence,vRotatedWindVector)\tf", "DirectionalBranchWind(${1:vPos},${2:vInstancePos},${3:fWeight},${4:fOffset},${5:fTime},${6:fDistance},${7:fTurbulence},${8:fAdherence},${9:fTwitch},${10:fTwitchScale},${11:fWhip},${12:bWhip},${13:bRoll},${14:bComplex},${15:bTurbulence},${16:vRotatedWindVector})"],
        ["DirectionalBranchWindFrondStyle(vPos,vInstancePos,fWeight,fOffset,fTime,fDistance,fTurbulence,fAdherence,fTwitch,fTwitchScale,fWhip,bWhip,bRoll,bComplex,bTurbulence,vRotatedWindVector,vRotatedBranchAnchor)\tf", "DirectionalBranchWindFrondStyle(${1:vPos},${2:vInstancePos},${3:fWeight},${4:fOffset},${5:fTime},${6:fDistance},${7:fTurbulence},${8:fAdherence},${9:fTwitch},${10:fTwitchScale},${11:fWhip},${12:bWhip},${13:bRoll},${14:bComplex},${15:bTurbulence},${16:vRotatedWindVector},${17:vRotatedBranchAnchor})"],
        ["BranchWind(isPalmWind,vPos,vInstancePos,vWindData,vRotatedWindVector,vRotatedBranchAnchor)\tf", "BranchWind(${1:isPalmWind},${2:vPos},${3:vInstancePos},${4:vWindData},${5:vRotatedWindVector},${6:vRotatedBranchAnchor})"],
        ["LeafRipple(vPos,vDirection,fScale,fPackedRippleDir,fTime,fAmount,bDirectional,fTrigOffset)\tf", "LeafRipple(${1:vPos},${2:vDirection},${3:fScale},${4:fPackedRippleDir},${5:fTime},${6:fAmount},${7:bDirectional},${8:fTrigOffset})"],
        ["LeafTumble(vPos,vDirection,fScale,vAnchor,vGrowthDir,fTrigOffset,fTime,fFlip,fTwist,fAdherence,vTwitch,vRoll,bTwitch,bRoll,vRotatedWindVector)\tf", "LeafTumble(${1:vPos},${2:vDirection},${3:fScale},${4:vAnchor},${5:vGrowthDir},${6:fTrigOffset},${7:fTime},${8:fFlip},${9:fTwist},${10:fAdherence},${11:vTwitch},${12:vRoll},${13:bTwitch},${14:bRoll},${15:vRotatedWindVector})"],
        ["LeafWind(isBestWind,bLeaf2,vPos,vDirection,fScale,vAnchor,fPackedGrowthDir,fPackedRippleDir,fRippleTrigOffset,vRotatedWindVector)\tf", "LeafWind(${1:isBestWind},${2:bLeaf2},${3:vPos},${4:vDirection},${5:fScale},${6:vAnchor},${7:fPackedGrowthDir},${8:fPackedRippleDir},${9:fRippleTrigOffset},${10:vRotatedWindVector})"],
        ["RippleFrondOneSided(vPos,vDirection,fU,fV,fRippleScale,WIND_EFFECT_FROND_RIPPLE_ADJUST_LIGHTING,vBinormal,vTangent)\tf", "RippleFrondOneSided(${1:vPos},${2:vDirection},${3:fU},${4:fV},${5:fRippleScale},${6:WIND_EFFECT_FROND_RIPPLE_ADJUST_LIGHTING},${7:vBinormal},${8:vTangent})"],
        ["RippleFrondTwoSided(vPos,vDirection,fU,fLengthPercent,fPackedRippleDir,fRippleScale,WIND_EFFECT_FROND_RIPPLE_ADJUST_LIGHTING,vBinormal,vTangent)\tf", "RippleFrondTwoSided(${1:vPos},${2:vDirection},${3:fU},${4:fLengthPercent},${5:fPackedRippleDir},${6:fRippleScale},${7:WIND_EFFECT_FROND_RIPPLE_ADJUST_LIGHTING},${8:vBinormal},${9:vTangent})"],
        ["RippleFrond(vPos,vDirection,fU,fV,fPackedRippleDir,fRippleScale,fLenghtPercent,WIND_EFFECT_FROND_RIPPLE_ADJUST_LIGHTING,vBinormal,vTangent)\tf", "RippleFrond(${1:vPos},${2:vDirection},${3:fU},${4:fV},${5:fPackedRippleDir},${6:fRippleScale},${7:fLenghtPercent},${8:WIND_EFFECT_FROND_RIPPLE_ADJUST_LIGHTING},${9:vBinormal},${10:vTangent})"],
        ["NormalizePerVertexNormal(n)\tf", "NormalizePerVertexNormal(${1:n})"],
        ["NormalizePerPixelNormal(n)\tf", "NormalizePerPixelNormal(${1:n})"],
        ["MainLight()\tf", "MainLight()"],
        ["AdditiveLight(lightDir,atten)\tf", "AdditiveLight(${1:lightDir},${2:atten})"],
        ["DummyLight()\tf", "DummyLight()"],
        ["ZeroIndirect()\tf", "ZeroIndirect()"],
        ["WorldNormal(tan2world)\tf", "WorldNormal(${1:tan2world})"],
        ["PerPixelWorldNormal(i_tex,tangentToWorld)\tf", "PerPixelWorldNormal(${1:i_tex},${2:tangentToWorld})"],
        ["SpecularSetup(i_tex)\tf", "SpecularSetup(${1:i_tex})"],
        ["MetallicSetup(i_tex)\tf", "MetallicSetup(${1:i_tex})"],
        ["FragmentSetup(i_tex,i_eyeVec,i_viewDirForParallax,tangentToWorld,i_posWorld)\tf", "FragmentSetup(${1:i_tex},${2:i_eyeVec},${3:i_viewDirForParallax},${4:tangentToWorld},${5:i_posWorld})"],
        ["FragmentGI(s,occlusion,i_ambientOrLightmapUV,atten,light,reflections)\tf", "FragmentGI(${1:s},${2:occlusion},${3:i_ambientOrLightmapUV},${4:atten},${5:light},${6:reflections})"],
        ["OutputForward(output,alphaFromSurface)\tf", "OutputForward(${1:output},${2:alphaFromSurface})"],
        ["VertexGIForward(v,posWorld,normalWorld)\tf", "VertexGIForward(${1:v},${2:posWorld},${3:normalWorld})"],
        ["vertForwardBase(v)\tf", "vertForwardBase(${1:v})"],
        ["fragForwardBaseInternal(i)\tf", "fragForwardBaseInternal(${1:i})"],
        ["fragForwardBase(i)\tf", "fragForwardBase(${1:i})"],
        ["vertForwardAdd(v)\tf", "vertForwardAdd(${1:v})"],
        ["fragForwardAddInternal(i)\tf", "fragForwardAddInternal(${1:i})"],
        ["fragForwardAdd(i)\tf", "fragForwardAdd(${1:i})"],
        ["vertDeferred(v)\tf", "vertDeferred(${1:v})"],
        ["fragDeferred(i,outGBuffer0,outGBuffer1,outGBuffer2,outEmission)\tf", "fragDeferred(${1:i},${2:outGBuffer0},${3:outGBuffer1},${4:outGBuffer2},${5:outEmission})"],
        ["DecodeDirectionalSpecularLightmap(color,dirTex,normalWorld,isRealtimeLightmap,realtimeNormalTex,o_light)\tf", "DecodeDirectionalSpecularLightmap(${1:color},${2:dirTex},${3:normalWorld},${4:isRealtimeLightmap},${5:realtimeNormalTex},${6:o_light})"],
        ["MixLightmapWithRealtimeAttenuation(lightmap,attenuation,bakedColorTex,normalWorld)\tf", "MixLightmapWithRealtimeAttenuation(${1:lightmap},${2:attenuation},${3:bakedColorTex},${4:normalWorld})"],
        ["ResetUnityLight(outLight)\tf", "ResetUnityLight(${1:outLight})"],
        ["ResetUnityGI(outGI)\tf", "ResetUnityGI(${1:outGI})"],
        ["UnityGI_Base(data,occlusion,normalWorld)\tf", "UnityGI_Base(${1:data},${2:occlusion},${3:normalWorld})"],
        ["UnityGI_IndirectSpecular(data,occlusion,glossIn)\tf", "UnityGI_IndirectSpecular(${1:data},${2:occlusion},${3:glossIn})"],
        ["UnityGlobalIllumination(data,occlusion,normalWorld)\tf", "UnityGlobalIllumination(${1:data},${2:occlusion},${3:normalWorld})"],
        ["OffsetSpeedTreeVertex(data,lodValue)\tf", "OffsetSpeedTreeVertex(${1:data},${2:lodValue})"],
        ["SplatmapVert(v,data)\tf", "SplatmapVert(${1:v},${2:data})"],
        ["SplatmapMix(IN,defaultAlpha,splat_control,weight,mixedDiffuse,mixedNormal)\tf", "SplatmapMix(${1:IN},${2:defaultAlpha},${3:splat_control},${4:weight},${5:mixedDiffuse},${6:mixedNormal})"],
        ["SplatmapFinalColor(IN,o,color)\tf", "SplatmapFinalColor(${1:IN},${2:o},${3:color})"],
        ["SplatmapFinalPrepass(IN,o,normalSpec)\tf", "SplatmapFinalPrepass(${1:IN},${2:o},${3:normalSpec})"],
        ["SplatmapFinalGBuffer(IN,o,outGBuffer0,outGBuffer1,outGBuffer2,emission)\tf", "SplatmapFinalGBuffer(${1:IN},${2:o},${3:outGBuffer0},${4:outGBuffer1},${5:outGBuffer2},${6:emission})"],
        ["UnityStandardDataToGbuffer(data,outGBuffer0,outGBuffer1,outGBuffer2)\tf", "UnityStandardDataToGbuffer(${1:data},${2:outGBuffer0},${3:outGBuffer1},${4:outGBuffer2})"],
        ["UnityStandardDataFromGbuffer(inGBuffer0,inGBuffer1,inGBuffer2)\tf", "UnityStandardDataFromGbuffer(${1:inGBuffer0},${2:inGBuffer1},${3:inGBuffer2})"],
        ["UnityStandardDataApplyWeightToGbuffer(inOutGBuffer0,inOutGBuffer1,inOutGBuffer2,alpha)\tf", "UnityStandardDataApplyWeightToGbuffer(${1:inOutGBuffer0},${2:inOutGBuffer1},${3:inOutGBuffer2},${4:alpha})"],
        ["vert_meta(v)\tf", "vert_meta(${1:v})"],
        ["UnityLightmappingAlbedo(diffuse,specular,smoothness)\tf", "UnityLightmappingAlbedo(${1:diffuse},${2:specular},${3:smoothness})"],
        ["frag_meta(i)\tf", "frag_meta(${1:i})"],
        ["CBUFFER_START()\tf", "CBUFFER_START()"],
        ["SpeedTreeBillboardVert(IN,OUT)\tf", "SpeedTreeBillboardVert(${1:IN},${2:OUT})"],
        ["UnityLambertLight(s,light)\tf", "UnityLambertLight(${1:s},${2:light})"],
        ["LightingLambert(s,gi)\tf", "LightingLambert(${1:s},${2:gi})"],
        ["LightingLambert_Deferred(s,gi,outGBuffer0,outGBuffer1,outGBuffer2)\tf", "LightingLambert_Deferred(${1:s},${2:gi},${3:outGBuffer0},${4:outGBuffer1},${5:outGBuffer2})"],
        ["LightingLambert_GI(s,data,gi)\tf", "LightingLambert_GI(${1:s},${2:data},${3:gi})"],
        ["LightingLambert_PrePass(s,light)\tf", "LightingLambert_PrePass(${1:s},${2:light})"],
        ["UnityBlinnPhongLight(s,viewDir,light)\tf", "UnityBlinnPhongLight(${1:s},${2:viewDir},${3:light})"],
        ["LightingBlinnPhong(s,viewDir,gi)\tf", "LightingBlinnPhong(${1:s},${2:viewDir},${3:gi})"],
        ["LightingBlinnPhong_Deferred(s,viewDir,gi,outGBuffer0,outGBuffer1,outGBuffer2)\tf", "LightingBlinnPhong_Deferred(${1:s},${2:viewDir},${3:gi},${4:outGBuffer0},${5:outGBuffer1},${6:outGBuffer2})"],
        ["LightingBlinnPhong_GI(s,data,gi)\tf", "LightingBlinnPhong_GI(${1:s},${2:data},${3:gi})"],
        ["LightingBlinnPhong_PrePass(s,light)\tf", "LightingBlinnPhong_PrePass(${1:s},${2:light})"],
        ["DirLightmapDiffuse(dirBasis,color,scale,normal,surfFuncWritesNormal,scalePerBasisVector)\tf", "DirLightmapDiffuse(${1:dirBasis},${2:color},${3:scale},${4:normal},${5:surfFuncWritesNormal},${6:scalePerBasisVector})"],
        ["UnityCalcDistanceTessFactor(vertex,minDist,maxDist,tess)\tf", "UnityCalcDistanceTessFactor(${1:vertex},${2:minDist},${3:maxDist},${4:tess})"],
        ["UnityCalcTriEdgeTessFactors(triVertexFactors)\tf", "UnityCalcTriEdgeTessFactors(${1:triVertexFactors})"],
        ["UnityCalcEdgeTessFactor(wpos0,wpos1,edgeLen)\tf", "UnityCalcEdgeTessFactor(${1:wpos0},${2:wpos1},${3:edgeLen})"],
        ["UnityDistanceFromPlane(pos,plane)\tf", "UnityDistanceFromPlane(${1:pos},${2:plane})"],
        ["UnityWorldViewFrustumCull(wpos0,wpos1,wpos2,cullEps)\tf", "UnityWorldViewFrustumCull(${1:wpos0},${2:wpos1},${3:wpos2},${4:cullEps})"],
        ["UnityDistanceBasedTess(v0,v1,v2,minDist,maxDist,tess)\tf", "UnityDistanceBasedTess(${1:v0},${2:v1},${3:v2},${4:minDist},${5:maxDist},${6:tess})"],
        ["UnityEdgeLengthBasedTess(v0,v1,v2,edgeLength)\tf", "UnityEdgeLengthBasedTess(${1:v0},${2:v1},${3:v2},${4:edgeLength})"],
        ["UnityEdgeLengthBasedTessCull(v0,v1,v2,edgeLength,maxDisplacement)\tf", "UnityEdgeLengthBasedTessCull(${1:v0},${2:v1},${3:v2},${4:edgeLength},${5:maxDisplacement})"],
        ["FastSinCos(val,s,c)\tf", "FastSinCos(${1:val},${2:s},${3:c})"],
        ["TerrainWaveGrass(vertex,waveAmount,color)\tf", "TerrainWaveGrass(${1:vertex},${2:waveAmount},${3:color})"],
        ["TerrainBillboardGrass(pos,offset)\tf", "TerrainBillboardGrass(${1:pos},${2:offset})"],
        ["WavingGrassVert(v)\tf", "WavingGrassVert(${1:v})"],
        ["WavingGrassBillboardVert(v)\tf", "WavingGrassBillboardVert(${1:v})"],
        ["Squash(pos)\tf", "Squash(${1:pos})"],
        ["TerrainAnimateTree(pos,alpha)\tf", "TerrainAnimateTree(${1:pos},${2:alpha})"],
        ["TerrainBillboardTree(pos,offset,offsetz)\tf", "TerrainBillboardTree(${1:pos},${2:offset},${3:offsetz})"],
        ["ExpandBillboard(mat,pos,normal,tangent)\tf", "ExpandBillboard(${1:mat},${2:pos},${3:normal},${4:tangent})"],
        ["SmoothCurve(x)\tf", "SmoothCurve(${1:x})"],
        ["SmoothTriangleWave(x)\tf", "SmoothTriangleWave(${1:x})"],
        ["AnimateVertex(pos,normal,animParams)\tf", "AnimateVertex(${1:pos},${2:normal},${3:animParams})"],
        ["BRDF_Unity_Indirect(baseColor,specColor,oneMinusReflectivity,smoothness,normal,viewDir,occlusion,gi)\tf", "BRDF_Unity_Indirect(${1:baseColor},${2:specColor},${3:oneMinusReflectivity},${4:smoothness},${5:normal},${6:viewDir},${7:occlusion},${8:gi})"],
        ["LightingStandard(s,viewDir,gi)\tf", "LightingStandard(${1:s},${2:viewDir},${3:gi})"],
        ["LightingStandard_Deferred(s,viewDir,gi,outGBuffer0,outGBuffer1,outGBuffer2)\tf", "LightingStandard_Deferred(${1:s},${2:viewDir},${3:gi},${4:outGBuffer0},${5:outGBuffer1},${6:outGBuffer2})"],
        ["LightingStandard_GI(s,data,gi)\tf", "LightingStandard_GI(${1:s},${2:data},${3:gi})"],
        ["LightingStandardSpecular(s,viewDir,gi)\tf", "LightingStandardSpecular(${1:s},${2:viewDir},${3:gi})"],
        ["LightingStandardSpecular_Deferred(s,viewDir,gi,outGBuffer0,outGBuffer1,outGBuffer2)\tf", "LightingStandardSpecular_Deferred(${1:s},${2:viewDir},${3:gi},${4:outGBuffer0},${5:outGBuffer1},${6:outGBuffer2})"],
        ["LightingStandardSpecular_GI(s,data,gi)\tf", "LightingStandardSpecular_GI(${1:s},${2:data},${3:gi})"],
        ["UnityMetaVertexPosition(vertex,uv1,uv2,lightmapST,dynlightmapST)\tf", "UnityMetaVertexPosition(${1:vertex},${2:uv1},${3:uv2},${4:lightmapST},${5:dynlightmapST})"],
        ["UnityMetaFragment(IN)\tf", "UnityMetaFragment(${1:IN})"],
        ["IsGammaSpace()\tf", "IsGammaSpace()"],
        ["GammaToLinearSpaceExact(value)\tf", "GammaToLinearSpaceExact(${1:value})"],
        ["GammaToLinearSpace(sRGB)\tf", "GammaToLinearSpace(${1:sRGB})"],
        ["LinearToGammaSpaceExact(value)\tf", "LinearToGammaSpaceExact(${1:value})"],
        ["LinearToGammaSpace(linRGB)\tf", "LinearToGammaSpace(${1:linRGB})"],
        ["UnityObjectToClipPos(pos)\tf", "UnityObjectToClipPos(${1:pos})"],
        ["UnityWorldToClipPos(pos)\tf", "UnityWorldToClipPos(${1:pos})"],
        ["UnityViewToClipPos(pos)\tf", "UnityViewToClipPos(${1:pos})"],
        ["UnityObjectToViewPos(pos)\tf", "UnityObjectToViewPos(${1:pos})"],
        ["UnityWorldToViewPos(pos)\tf", "UnityWorldToViewPos(${1:pos})"],
        ["UnityObjectToWorldDir(dir)\tf", "UnityObjectToWorldDir(${1:dir})"],
        ["UnityWorldToObjectDir(dir)\tf", "UnityWorldToObjectDir(${1:dir})"],
        ["UnityObjectToWorldNormal(norm)\tf", "UnityObjectToWorldNormal(${1:norm})"],
        ["UnityWorldSpaceLightDir(worldPos)\tf", "UnityWorldSpaceLightDir(${1:worldPos})"],
        ["WorldSpaceLightDir(localPos)\tf", "WorldSpaceLightDir(${1:localPos})"],
        ["ObjSpaceLightDir(v)\tf", "ObjSpaceLightDir(${1:v})"],
        ["UnityWorldSpaceViewDir(worldPos)\tf", "UnityWorldSpaceViewDir(${1:worldPos})"],
        ["WorldSpaceViewDir(localPos)\tf", "WorldSpaceViewDir(${1:localPos})"],
        ["ObjSpaceViewDir(v)\tf", "ObjSpaceViewDir(${1:v})"],
        ["Shade4PointLights(lightPosX,lightPosY,lightPosZ,lightColor0,lightColor1,lightColor2,lightColor3,lightAttenSq,pos,normal)\tf", "Shade4PointLights(${1:lightPosX},${2:lightPosY},${3:lightPosZ},${4:lightColor0},${5:lightColor1},${6:lightColor2},${7:lightColor3},${8:lightAttenSq},${9:pos},${10:normal})"],
        ["ShadeVertexLightsFull(vertex,normal,lightCount,spotLight)\tf", "ShadeVertexLightsFull(${1:vertex},${2:normal},${3:lightCount},${4:spotLight})"],
        ["ShadeVertexLights(vertex,normal)\tf", "ShadeVertexLights(${1:vertex},${2:normal})"],
        ["SHEvalLinearL0L1(normal)\tf", "SHEvalLinearL0L1(${1:normal})"],
        ["SHEvalLinearL2(normal)\tf", "SHEvalLinearL2(${1:normal})"],
        ["ShadeSH9(normal)\tf", "ShadeSH9(${1:normal})"],
        ["ShadeSH3Order(normal)\tf", "ShadeSH3Order(${1:normal})"],
        ["SHEvalLinearL0L1_SampleProbeVolume(normal,worldPos)\tf", "SHEvalLinearL0L1_SampleProbeVolume(${1:normal},${2:worldPos})"],
        ["ShadeSH12Order(normal)\tf", "ShadeSH12Order(${1:normal})"],
        ["VertexLight(i,mainTex)\tf", "VertexLight(${1:i},${2:mainTex})"],
        ["ParallaxOffset(h,height,viewDir)\tf", "ParallaxOffset(${1:h},${2:height},${3:viewDir})"],
        ["Luminance(rgb)\tf", "Luminance(${1:rgb})"],
        ["LinearRgbToLuminance(linearRgb)\tf", "LinearRgbToLuminance(${1:linearRgb})"],
        ["UnityEncodeRGBM(rgb,maxRGBM)\tf", "UnityEncodeRGBM(${1:rgb},${2:maxRGBM})"],
        ["DecodeHDR(data,decodeInstructions)\tf", "DecodeHDR(${1:data},${2:decodeInstructions})"],
        ["DecodeLightmapRGBM(data,decodeInstructions)\tf", "DecodeLightmapRGBM(${1:data},${2:decodeInstructions})"],
        ["DecodeLightmapDoubleLDR(color)\tf", "DecodeLightmapDoubleLDR(${1:color})"],
        ["DecodeLightmap(color)\tf", "DecodeLightmap(${1:color})"],
        ["DecodeRealtimeLightmap(color)\tf", "DecodeRealtimeLightmap(${1:color})"],
        ["DecodeDirectionalLightmap(color,dirTex,normalWorld)\tf", "DecodeDirectionalLightmap(${1:color},${2:dirTex},${3:normalWorld})"],
        ["MultiplyUV(mat,inUV)\tf", "MultiplyUV(${1:mat},${2:inUV})"],
        ["vert_img(v)\tf", "vert_img(${1:v})"],
        ["EncodeFloatRGBA(v)\tf", "EncodeFloatRGBA(${1:v})"],
        ["DecodeFloatRGBA(enc)\tf", "DecodeFloatRGBA(${1:enc})"],
        ["EncodeFloatRG(v)\tf", "EncodeFloatRG(${1:v})"],
        ["DecodeFloatRG(enc)\tf", "DecodeFloatRG(${1:enc})"],
        ["EncodeViewNormalStereo(n)\tf", "EncodeViewNormalStereo(${1:n})"],
        ["DecodeViewNormalStereo(enc4)\tf", "DecodeViewNormalStereo(${1:enc4})"],
        ["EncodeDepthNormal(depth,normal)\tf", "EncodeDepthNormal(${1:depth},${2:normal})"],
        ["DecodeDepthNormal(enc,depth,normal)\tf", "DecodeDepthNormal(${1:enc},${2:depth},${3:normal})"],
        ["UnpackNormalDXT5nm(packednormal)\tf", "UnpackNormalDXT5nm(${1:packednormal})"],
        ["UnpackNormal(packednormal)\tf", "UnpackNormal(${1:packednormal})"],
        ["Linear01Depth(z)\tf", "Linear01Depth(${1:z})"],
        ["LinearEyeDepth(z)\tf", "LinearEyeDepth(${1:z})"],
        ["TransformStereoScreenSpaceTex(uv,w)\tf", "TransformStereoScreenSpaceTex(${1:uv},${2:w})"],
        ["UnityStereoScreenSpaceUVAdjustInternal(uv,scaleAndOffset)\tf", "UnityStereoScreenSpaceUVAdjustInternal(${1:uv},${2:scaleAndOffset})"],
        ["UnityStereoTransformScreenSpaceTex(uv)\tf", "UnityStereoTransformScreenSpaceTex(${1:uv})"],
        ["ComputeNonStereoScreenPos(pos)\tf", "ComputeNonStereoScreenPos(${1:pos})"],
        ["ComputeScreenPos(pos)\tf", "ComputeScreenPos(${1:pos})"],
        ["ComputeGrabScreenPos(pos)\tf", "ComputeGrabScreenPos(${1:pos})"],
        ["UnityPixelSnap(pos)\tf", "UnityPixelSnap(${1:pos})"],
        ["TransformViewToProjection(v)\tf", "TransformViewToProjection(${1:v})"],
        ["UnityEncodeCubeShadowDepth(z)\tf", "UnityEncodeCubeShadowDepth(${1:z})"],
        ["UnityDecodeCubeShadowDepth(vals)\tf", "UnityDecodeCubeShadowDepth(${1:vals})"],
        ["UnityClipSpaceShadowCasterPos(vertex,normal)\tf", "UnityClipSpaceShadowCasterPos(${1:vertex},${2:normal})"],
        ["UnityApplyLinearShadowBias(clipPos)\tf", "UnityApplyLinearShadowBias(${1:clipPos})"],
        ["_TANGENT_TO_WORLD\tbuiltin-marco", "_TANGENT_TO_WORLD"],
        ["_DETAIL\tbuiltin-marco", "_DETAIL"],
        ["EXCEEDS_D3D9_SM3_MAX_SAMPLER_COUNT\tbuiltin-marco", "EXCEEDS_D3D9_SM3_MAX_SAMPLER_COUNT"],
        ["GLOSSMAP\tbuiltin-marco", "GLOSSMAP"],
        ["SPECULAR_HIGHLIGHTS\tbuiltin-marco", "SPECULAR_HIGHLIGHTS"],
        ["JOIN2(a,b)\tf", "JOIN2(${1:a},${2:b})"],
        ["JOIN(a,b)\tf", "JOIN(${1:a},${2:b})"],
        ["UNIFORM_REFLECTIVITY\tbuiltin-marco", "UNIFORM_REFLECTIVITY"],
        ["mainTexUV\tbuiltin-marco", "mainTexUV"],
        ["Detail\tbuiltin-marco", "Detail"],
        ["HueVariationAmount\tbuiltin-marco", "HueVariationAmount"],
        ["SPEEDTREE_DATA_NORMAL\tbuiltin-marco", "SPEEDTREE_DATA_NORMAL"],
        ["SPEEDTREE_COPY_NORMAL(to,from)\tf", "SPEEDTREE_COPY_NORMAL(${1:to},${2:from})"],
        ["SPEEDTREE_COPY_FRAG(to,from)\tf", "SPEEDTREE_COPY_FRAG(${1:to},${2:from})"],
        ["unityShadowCoord\tbuiltin-marco", "unityShadowCoord"],
        ["unityShadowCoord2\tbuiltin-marco", "unityShadowCoord2"],
        ["unityShadowCoord3\tbuiltin-marco", "unityShadowCoord3"],
        ["unityShadowCoord4\tbuiltin-marco", "unityShadowCoord4"],
        ["unityShadowCoord4x4\tbuiltin-marco", "unityShadowCoord4x4"],
        ["SHADOW_COORDS(idx1)\tf", "SHADOW_COORDS(${1:idx1})"],
        ["TRANSFER_SHADOW(a)\tf", "TRANSFER_SHADOW(${1:a})"],
        ["SHADOW_ATTENUATION(a)\tf", "SHADOW_ATTENUATION(${1:a})"],
        ["UNITY_LIGHT_ATTENUATION(destName,input,worldPos)\tf", "UNITY_LIGHT_ATTENUATION(${1:destName},${2:input},${3:worldPos})"],
        ["LIGHTING_COORDS(idx1,idx2)\tf", "LIGHTING_COORDS(${1:idx1},${2:idx2})"],
        ["TRANSFER_VERTEX_TO_FRAGMENT(a)\tf", "TRANSFER_VERTEX_TO_FRAGMENT(${1:a})"],
        ["LIGHT_ATTENUATION(a)\tf", "LIGHT_ATTENUATION(${1:a})"],
        ["UNITY_HANDLE_CORRECTLY_NEGATIVE_NDOTV\tbuiltin-marco", "UNITY_HANDLE_CORRECTLY_NEGATIVE_NDOTV"],
        ["UNITY_STANDARD_USE_DITHER_MASK\tbuiltin-marco", "UNITY_STANDARD_USE_DITHER_MASK"],
        ["UNITY_STANDARD_USE_SHADOW_UVS\tbuiltin-marco", "UNITY_STANDARD_USE_SHADOW_UVS"],
        ["UNITY_STANDARD_USE_SHADOW_OUTPUT_STRUCT\tbuiltin-marco", "UNITY_STANDARD_USE_SHADOW_OUTPUT_STRUCT"],
        ["SHADOW_JOIN2(a,b)\tf", "SHADOW_JOIN2(${1:a},${2:b})"],
        ["SHADOW_JOIN(a,b)\tf", "SHADOW_JOIN(${1:a},${2:b})"],
        ["SHADOW_ONEMINUSREFLECTIVITY\tbuiltin-marco", "SHADOW_ONEMINUSREFLECTIVITY"],
        ["wind_cross(a,b)\tf", "wind_cross(${1:a},${2:b})"],
        ["IN_VIEWDIR4PARALLAX(i)\tf", "IN_VIEWDIR4PARALLAX(${1:i})"],
        ["IN_VIEWDIR4PARALLAX_FWDADD(i)\tf", "IN_VIEWDIR4PARALLAX_FWDADD(${1:i})"],
        ["IN_WORLDPOS(i)\tf", "IN_WORLDPOS(${1:i})"],
        ["IN_LIGHTDIR_FWDADD(i)\tf", "IN_LIGHTDIR_FWDADD(${1:i})"],
        ["FRAGMENT_SETUP(x)\tf", "FRAGMENT_SETUP(${1:x})"],
        ["FRAGMENT_SETUP_FWDADD(x)\tf", "FRAGMENT_SETUP_FWDADD(${1:x})"],
        ["UNITY_SETUP_BRDF_INPUT\tbuiltin-marco", "UNITY_SETUP_BRDF_INPUT"],
        ["IMPROVED_BAKED_AND_REALTIME_SHADOW_MIXING\tbuiltin-marco", "IMPROVED_BAKED_AND_REALTIME_SHADOW_MIXING"],
        ["WIND_QUALITY_NONE\tbuiltin-marco", "WIND_QUALITY_NONE"],
        ["WIND_QUALITY_FASTEST\tbuiltin-marco", "WIND_QUALITY_FASTEST"],
        ["WIND_QUALITY_FAST\tbuiltin-marco", "WIND_QUALITY_FAST"],
        ["WIND_QUALITY_BETTER\tbuiltin-marco", "WIND_QUALITY_BETTER"],
        ["WIND_QUALITY_BEST\tbuiltin-marco", "WIND_QUALITY_BEST"],
        ["WIND_QUALITY_PALM\tbuiltin-marco", "WIND_QUALITY_PALM"],
        ["TERRAIN_SURFACE_OUTPUT\tbuiltin-marco", "TERRAIN_SURFACE_OUTPUT"],
        ["UNITY_PASS_META\tbuiltin-marco", "UNITY_PASS_META"],
        ["unity_BillboardCameraPosition\tbuiltin-marco", "unity_BillboardCameraPosition"],
        ["unity_BillboardCameraXZAngle\tbuiltin-marco", "unity_BillboardCameraXZAngle"],
        ["UNITY_SPECCUBE_LOD_EXPONENT\tbuiltin-marco", "UNITY_SPECCUBE_LOD_EXPONENT"],
        ["UNITY_SPECCUBE_LOD_STEPS\tbuiltin-marco", "UNITY_SPECCUBE_LOD_STEPS"],
        ["UNITY_CONSERVE_ENERGY\tbuiltin-marco", "UNITY_CONSERVE_ENERGY"],
        ["UNITY_CONSERVE_ENERGY_MONOCHROME\tbuiltin-marco", "UNITY_CONSERVE_ENERGY_MONOCHROME"],
        ["UNITY_SPECCUBE_BOX_PROJECTION\tbuiltin-marco", "UNITY_SPECCUBE_BOX_PROJECTION"],
        ["UNITY_SPECCUBE_BLENDING\tbuiltin-marco", "UNITY_SPECCUBE_BLENDING"],
        ["UNITY_SAMPLE_FULL_SH_PER_PIXEL\tbuiltin-marco", "UNITY_SAMPLE_FULL_SH_PER_PIXEL"],
        ["UNITY_BRDF_GGX\tbuiltin-marco", "UNITY_BRDF_GGX"],
        ["UNITY_TANGENT_ORTHONORMALIZE\tbuiltin-marco", "UNITY_TANGENT_ORTHONORMALIZE"],
        ["UNITY_OPTIMIZE_TEXCUBELOD\tbuiltin-marco", "UNITY_OPTIMIZE_TEXCUBELOD"],
        ["UNITY_STANDARD_SIMPLE\tbuiltin-marco", "UNITY_STANDARD_SIMPLE"],
        ["UNITY_REQUIRE_FRAG_WORLDPOS\tbuiltin-marco", "UNITY_REQUIRE_FRAG_WORLDPOS"],
        ["UNITY_DIRBASIS\tbuiltin-marco", "UNITY_DIRBASIS"],
        ["glstate_matrix_projection\tbuiltin-marco", "glstate_matrix_projection"],
        ["unity_MatrixV\tbuiltin-marco", "unity_MatrixV"],
        ["unity_MatrixInvV\tbuiltin-marco", "unity_MatrixInvV"],
        ["unity_MatrixVP\tbuiltin-marco", "unity_MatrixVP"],
        ["unity_CameraProjection\tbuiltin-marco", "unity_CameraProjection"],
        ["unity_CameraInvProjection\tbuiltin-marco", "unity_CameraInvProjection"],
        ["unity_WorldToCamera\tbuiltin-marco", "unity_WorldToCamera"],
        ["unity_CameraToWorld\tbuiltin-marco", "unity_CameraToWorld"],
        ["_WorldSpaceCameraPos\tbuiltin-marco", "_WorldSpaceCameraPos"],
        ["UNITY_MATRIX_P\tbuiltin-marco", "UNITY_MATRIX_P"],
        ["UNITY_MATRIX_V\tbuiltin-marco", "UNITY_MATRIX_V"],
        ["UNITY_MATRIX_I_V\tbuiltin-marco", "UNITY_MATRIX_I_V"],
        ["UNITY_MATRIX_VP\tbuiltin-marco", "UNITY_MATRIX_VP"],
        ["UNITY_MATRIX_M\tbuiltin-marco", "UNITY_MATRIX_M"],
        ["UNITY_MATRIX_MVP\tbuiltin-marco", "UNITY_MATRIX_MVP"],
        ["UNITY_MATRIX_MV\tbuiltin-marco", "UNITY_MATRIX_MV"],
        ["UNITY_MATRIX_T_MV\tbuiltin-marco", "UNITY_MATRIX_T_MV"],
        ["UNITY_MATRIX_IT_MV\tbuiltin-marco", "UNITY_MATRIX_IT_MV"],
        ["UNITY_LIGHTMODEL_AMBIENT\tbuiltin-marco", "UNITY_LIGHTMODEL_AMBIENT"],
        ["UNITY_LIGHT_PROBE_PROXY_VOLUME\tbuiltin-marco", "UNITY_LIGHT_PROBE_PROXY_VOLUME"],
        ["UNITY_MATRIX_TEXTURE0\tbuiltin-marco", "UNITY_MATRIX_TEXTURE0"],
        ["UNITY_MATRIX_TEXTURE1\tbuiltin-marco", "UNITY_MATRIX_TEXTURE1"],
        ["UNITY_MATRIX_TEXTURE2\tbuiltin-marco", "UNITY_MATRIX_TEXTURE2"],
        ["UNITY_MATRIX_TEXTURE3\tbuiltin-marco", "UNITY_MATRIX_TEXTURE3"],
        ["UNITY_VERTEX_INPUT_INSTANCE_ID\tbuiltin-marco", "UNITY_VERTEX_INPUT_INSTANCE_ID"],
        ["UNITY_TRANSFER_INSTANCE_ID(input,output)\tf", "UNITY_TRANSFER_INSTANCE_ID(${1:input},${2:output})"],
        ["UNITY_SETUP_INSTANCE_ID(input)\tf", "UNITY_SETUP_INSTANCE_ID(${1:input})"],
        ["UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(output)\tf", "UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(${1:output})"],
        ["UNITY_TRANSFER_VERTEX_OUTPUT_STEREO(input,output)\tf", "UNITY_TRANSFER_VERTEX_OUTPUT_STEREO(${1:input},${2:output})"],
        ["UNITY_VERTEX_OUTPUT_STEREO\tbuiltin-marco", "UNITY_VERTEX_OUTPUT_STEREO"],
        ["UNITY_MAX_INSTANCE_COUNT\tbuiltin-marco", "UNITY_MAX_INSTANCE_COUNT"],
        ["UNITY_INSTANCED_ARRAY_SIZE\tbuiltin-marco", "UNITY_INSTANCED_ARRAY_SIZE"],
        ["UNITY_INSTANCING_CBUFFER_START(name)\tf", "UNITY_INSTANCING_CBUFFER_START(${1:name})"],
        ["UNITY_INSTANCING_CBUFFER_END\tbuiltin-marco", "UNITY_INSTANCING_CBUFFER_END"],
        ["UNITY_DEFINE_INSTANCED_PROP(type,name)\tf", "UNITY_DEFINE_INSTANCED_PROP(${1:type},${2:name})"],
        ["UNITY_ACCESS_INSTANCED_PROP(name)\tf", "UNITY_ACCESS_INSTANCED_PROP(${1:name})"],
        ["unity_ObjectToWorld\tbuiltin-marco", "unity_ObjectToWorld"],
        ["unity_WorldToObject\tbuiltin-marco", "unity_WorldToObject"],
        ["unity_LODFade\tbuiltin-marco", "unity_LODFade"],
        ["UNITY_BRDF_PBS\tbuiltin-marco", "UNITY_BRDF_PBS"],
        ["UNITY_BRDF_PBS_LIGHTMAP_INDIRECT\tbuiltin-marco", "UNITY_BRDF_PBS_LIGHTMAP_INDIRECT"],
        ["UNITY_BRDF_GI\tbuiltin-marco", "UNITY_BRDF_GI"],
        ["UNITY_GLOSSY_ENV_FROM_SURFACE(x,s,data)\tf", "UNITY_GLOSSY_ENV_FROM_SURFACE(${1:x},${2:s},${3:data})"],
        ["UNITY_GI(x,s,data)\tf", "UNITY_GI(${1:x},${2:s},${3:data})"],
        ["UNITY_PI\tbuiltin-marco", "UNITY_PI"],
        ["UNITY_TWO_PI\tbuiltin-marco", "UNITY_TWO_PI"],
        ["UNITY_FOUR_PI\tbuiltin-marco", "UNITY_FOUR_PI"],
        ["UNITY_INV_PI\tbuiltin-marco", "UNITY_INV_PI"],
        ["UNITY_INV_TWO_PI\tbuiltin-marco", "UNITY_INV_TWO_PI"],
        ["UNITY_INV_FOUR_PI\tbuiltin-marco", "UNITY_INV_FOUR_PI"],
        ["UNITY_HALF_PI\tbuiltin-marco", "UNITY_HALF_PI"],
        ["UNITY_INV_HALF_PI\tbuiltin-marco", "UNITY_INV_HALF_PI"],
        ["unity_ColorSpaceGrey\tbuiltin-marco", "unity_ColorSpaceGrey"],
        ["unity_ColorSpaceDouble\tbuiltin-marco", "unity_ColorSpaceDouble"],
        ["unity_ColorSpaceDielectricSpec\tbuiltin-marco", "unity_ColorSpaceDielectricSpec"],
        ["unity_ColorSpaceLuminance\tbuiltin-marco", "unity_ColorSpaceLuminance"],
        ["SCALED_NORMAL\tbuiltin-marco", "SCALED_NORMAL"],
        ["LIGHTMAP_RGBM_SCALE\tbuiltin-marco", "LIGHTMAP_RGBM_SCALE"],
        ["EMISSIVE_RGBM_SCALE\tbuiltin-marco", "EMISSIVE_RGBM_SCALE"],
        ["UNITY_SHOULD_SAMPLE_SH\tbuiltin-marco", "UNITY_SHOULD_SAMPLE_SH"],
        ["TANGENT_SPACE_ROTATION\tbuiltin-marco", "TANGENT_SPACE_ROTATION"],
        ["TRANSFORM_TEX(tex,name)\tf", "TRANSFORM_TEX(${1:tex},${2:name})"],
        ["TRANSFORM_UV(idx)\tf", "TRANSFORM_UV(${1:idx})"],
        ["UnityStereoScreenSpaceUVAdjust(x,y)\tf", "UnityStereoScreenSpaceUVAdjust(${1:x},${2:y})"],
        ["DECODE_EYEDEPTH(i)\tf", "DECODE_EYEDEPTH(${1:i})"],
        ["COMPUTE_EYEDEPTH(o)\tf", "COMPUTE_EYEDEPTH(${1:o})"],
        ["COMPUTE_DEPTH_01\tbuiltin-marco", "COMPUTE_DEPTH_01"],
        ["COMPUTE_VIEW_NORMAL\tbuiltin-marco", "COMPUTE_VIEW_NORMAL"],
        ["V2F_SCREEN_TYPE\tbuiltin-marco", "V2F_SCREEN_TYPE"],
        ["V2F_SHADOW_CASTER_NOPOS\tbuiltin-marco", "V2F_SHADOW_CASTER_NOPOS"],
        ["TRANSFER_SHADOW_CASTER_NOPOS_LEGACY(o,opos)\tf", "TRANSFER_SHADOW_CASTER_NOPOS_LEGACY(${1:o},${2:opos})"],
        ["TRANSFER_SHADOW_CASTER_NOPOS(o,opos)\tf", "TRANSFER_SHADOW_CASTER_NOPOS(${1:o},${2:opos})"],
        ["SHADOW_CASTER_FRAGMENT(i)\tf", "SHADOW_CASTER_FRAGMENT(${1:i})"],
        ["V2F_SHADOW_CASTER\tbuiltin-marco", "V2F_SHADOW_CASTER"],
        ["TRANSFER_SHADOW_CASTER_NORMALOFFSET(o)\tf", "TRANSFER_SHADOW_CASTER_NORMALOFFSET(${1:o})"],
        ["TRANSFER_SHADOW_CASTER(o)\tf", "TRANSFER_SHADOW_CASTER(${1:o})"],
        ["UNITY_OPAQUE_ALPHA(outputAlpha)\tf", "UNITY_OPAQUE_ALPHA(${1:outputAlpha})"],
        ["UNITY_Z_0_FAR_FROM_CLIPSPACE(coord)\tf", "UNITY_Z_0_FAR_FROM_CLIPSPACE(${1:coord})"],
        ["UNITY_CALC_FOG_FACTOR_RAW(coord)\tf", "UNITY_CALC_FOG_FACTOR_RAW(${1:coord})"],
        ["UNITY_CALC_FOG_FACTOR(coord)\tf", "UNITY_CALC_FOG_FACTOR(${1:coord})"],
        ["UNITY_FOG_COORDS_PACKED(idx,vectype)\tf", "UNITY_FOG_COORDS_PACKED(${1:idx},${2:vectype})"],
        ["UNITY_FOG_COORDS(idx)\tf", "UNITY_FOG_COORDS(${1:idx})"],
        ["UNITY_TRANSFER_FOG(o,outpos)\tf", "UNITY_TRANSFER_FOG(${1:o},${2:outpos})"],
        ["UNITY_FOG_LERP_COLOR(col,fogCol,fogFac)\tf", "UNITY_FOG_LERP_COLOR(${1:col},${2:fogCol},${3:fogFac})"],
        ["UNITY_APPLY_FOG_COLOR(coord,col,fogCol)\tf", "UNITY_APPLY_FOG_COLOR(${1:coord},${2:col},${3:fogCol})"],
        ["UNITY_APPLY_FOG(coord,col)\tf", "UNITY_APPLY_FOG(${1:coord},${2:col})"],
        ["UNITY_DITHER_CROSSFADE_COORDS\tbuiltin-marco", "UNITY_DITHER_CROSSFADE_COORDS"],
        ["UNITY_DITHER_CROSSFADE_COORDS_IDX(idx)\tf", "UNITY_DITHER_CROSSFADE_COORDS_IDX(${1:idx})"],
        ["UNITY_TRANSFER_DITHER_CROSSFADE(o,v)\tf", "UNITY_TRANSFER_DITHER_CROSSFADE(${1:o},${2:v})"],
        ["UNITY_TRANSFER_DITHER_CROSSFADE_HPOS(o,hpos)\tf", "UNITY_TRANSFER_DITHER_CROSSFADE_HPOS(${1:o},${2:hpos})"],
        ["UNITY_APPLY_DITHER_CROSSFADE(i)\tf", "UNITY_APPLY_DITHER_CROSSFADE(${1:i})"],
        ["V2F_SHADOW_COLLECTOR\tbuiltin-marco", "V2F_SHADOW_COLLECTOR"],
        ["TRANSFER_SHADOW_COLLECTOR(o)\tf", "TRANSFER_SHADOW_COLLECTOR(${1:o})"],
        ["SAMPLE_SHADOW_COLLECTOR_SHADOW(coord)\tf", "SAMPLE_SHADOW_COLLECTOR_SHADOW(${1:coord})"],
        ["COMPUTE_SHADOW_COLLECTOR_SHADOW(i,weights,shadowFade)\tf", "COMPUTE_SHADOW_COLLECTOR_SHADOW(${1:i},${2:weights},${3:shadowFade})"],
        ["SHADOW_COLLECTOR_FRAGMENT(i)\tf", "SHADOW_COLLECTOR_FRAGMENT(${1:i})"],
        ["UNITY_TRANSFER_DEPTH(oo)\tf", "UNITY_TRANSFER_DEPTH(${1:oo})"],
        ["UNITY_OUTPUT_DEPTH(i)\tf", "UNITY_OUTPUT_DEPTH(${1:i})"],
        ["_ShadowMapTexture\tbuiltin-variable", "_ShadowMapTexture"],
        ["_LightTexture0\tbuiltin-variable", "_LightTexture0"],
        ["_LightTextureB0\tbuiltin-variable", "_LightTextureB0"],
        ["unity_DeltaTime\tbuiltin-variable", "unity_DeltaTime"],
        ["_ProjectionParams\tbuiltin-variable", "_ProjectionParams"],
        ["_ScreenParams\tbuiltin-variable", "_ScreenParams"],
        ["_ZBufferParams\tbuiltin-variable", "_ZBufferParams"],
        ["unity_OrthoParams\tbuiltin-variable", "unity_OrthoParams"],
        ["unity_CameraWorldClipPlanes\tbuiltin-variable", "unity_CameraWorldClipPlanes"],
        ["_WorldSpaceLightPos0\tbuiltin-variable", "_WorldSpaceLightPos0"],
        ["_LightPositionRange\tbuiltin-variable", "_LightPositionRange"],
        ["unity_4LightPosX0\tbuiltin-variable", "unity_4LightPosX0"],
        ["unity_4LightPosY0\tbuiltin-variable", "unity_4LightPosY0"],
        ["unity_4LightPosZ0\tbuiltin-variable", "unity_4LightPosZ0"],
        ["unity_4LightAtten0\tbuiltin-variable", "unity_4LightAtten0"],
        ["unity_LightColor\tbuiltin-variable", "unity_LightColor"],
        ["unity_LightAtten\tbuiltin-variable", "unity_LightAtten"],
        ["unity_SHAr\tbuiltin-variable", "unity_SHAr"],
        ["unity_SHAg\tbuiltin-variable", "unity_SHAg"],
        ["unity_SHAb\tbuiltin-variable", "unity_SHAb"],
        ["unity_SHBr\tbuiltin-variable", "unity_SHBr"],
        ["unity_SHBg\tbuiltin-variable", "unity_SHBg"],
        ["unity_SHBb\tbuiltin-variable", "unity_SHBb"],
        ["unity_SHC\tbuiltin-variable", "unity_SHC"],
        ["unity_ShadowSplitSpheres\tbuiltin-variable", "unity_ShadowSplitSpheres"],
        ["unity_ShadowSplitSqRadii\tbuiltin-variable", "unity_ShadowSplitSqRadii"],
        ["unity_LightShadowBias\tbuiltin-variable", "unity_LightShadowBias"],
        ["_LightSplitsNear\tbuiltin-variable", "_LightSplitsNear"],
        ["_LightSplitsFar\tbuiltin-variable", "_LightSplitsFar"],
        ["unity_WorldToShadow\tbuiltin-variable", "unity_WorldToShadow"],
        ["_LightShadowData\tbuiltin-variable", "_LightShadowData"],
        ["unity_ShadowFadeCenterAndType\tbuiltin-variable", "unity_ShadowFadeCenterAndType"],
        ["glstate_matrix_mvp\tbuiltin-variable", "glstate_matrix_mvp"],
        ["glstate_matrix_modelview0\tbuiltin-variable", "glstate_matrix_modelview0"],
        ["glstate_matrix_invtrans_modelview0\tbuiltin-variable", "glstate_matrix_invtrans_modelview0"],
        ["unity_WorldTransformParams\tbuiltin-variable", "unity_WorldTransformParams"],
        ["unity_StereoMatrixP\tbuiltin-variable", "unity_StereoMatrixP"],
        ["unity_StereoMatrixV\tbuiltin-variable", "unity_StereoMatrixV"],
        ["unity_StereoMatrixInvV\tbuiltin-variable", "unity_StereoMatrixInvV"],
        ["unity_StereoMatrixVP\tbuiltin-variable", "unity_StereoMatrixVP"],
        ["unity_StereoCameraProjection\tbuiltin-variable", "unity_StereoCameraProjection"],
        ["unity_StereoCameraInvProjection\tbuiltin-variable", "unity_StereoCameraInvProjection"],
        ["unity_StereoWorldToCamera\tbuiltin-variable", "unity_StereoWorldToCamera"],
        ["unity_StereoCameraToWorld\tbuiltin-variable", "unity_StereoCameraToWorld"],
        ["unity_StereoWorldSpaceCameraPos\tbuiltin-variable", "unity_StereoWorldSpaceCameraPos"],
        ["unity_StereoScaleOffset\tbuiltin-variable", "unity_StereoScaleOffset"],
        ["glstate_matrix_transpose_modelview0\tbuiltin-variable", "glstate_matrix_transpose_modelview0"],
        ["glstate_lightmodel_ambient\tbuiltin-variable", "glstate_lightmodel_ambient"],
        ["unity_AmbientSky\tbuiltin-variable", "unity_AmbientSky"],
        ["unity_AmbientEquator\tbuiltin-variable", "unity_AmbientEquator"],
        ["unity_AmbientGround\tbuiltin-variable", "unity_AmbientGround"],
        ["unity_IndirectSpecColor\tbuiltin-variable", "unity_IndirectSpecColor"],
        ["unity_FogColor\tbuiltin-variable", "unity_FogColor"],
        ["unity_FogParams\tbuiltin-variable", "unity_FogParams"],
        ["unity_LightmapST\tbuiltin-variable", "unity_LightmapST"],
        ["unity_DynamicLightmapST\tbuiltin-variable", "unity_DynamicLightmapST"],
        ["unity_SpecCube0_BoxMax\tbuiltin-variable", "unity_SpecCube0_BoxMax"],
        ["unity_SpecCube0_BoxMin\tbuiltin-variable", "unity_SpecCube0_BoxMin"],
        ["unity_SpecCube0_ProbePosition\tbuiltin-variable", "unity_SpecCube0_ProbePosition"],
        ["unity_SpecCube0_HDR\tbuiltin-variable", "unity_SpecCube0_HDR"],
        ["unity_SpecCube1_BoxMax\tbuiltin-variable", "unity_SpecCube1_BoxMax"],
        ["unity_SpecCube1_BoxMin\tbuiltin-variable", "unity_SpecCube1_BoxMin"],
        ["unity_SpecCube1_ProbePosition\tbuiltin-variable", "unity_SpecCube1_ProbePosition"],
        ["unity_SpecCube1_HDR\tbuiltin-variable", "unity_SpecCube1_HDR"],
        ["unity_ProbeVolumeParams\tbuiltin-variable", "unity_ProbeVolumeParams"],
        ["unity_ProbeVolumeWorldToObject\tbuiltin-variable", "unity_ProbeVolumeWorldToObject"],
        ["unity_ProbeVolumeSizeInv\tbuiltin-variable", "unity_ProbeVolumeSizeInv"],
        ["unity_ProbeVolumeMin\tbuiltin-variable", "unity_ProbeVolumeMin"],
        ["_LightColor0\tbuiltin-variable", "_LightColor0"],
        ["_SpecColor\tbuiltin-variable", "_SpecColor"],
    ]
}
